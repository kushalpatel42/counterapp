{"version":3,"sources":["Input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","input","onSubmit","this","type","onChange","style","backgroundColor","Component","App","increment","decrement","reset","number","parseInt","className","onClick","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAEqBA,E,4MACjBC,MAAM,CACFC,MAAO,I,EAEXC,aAAa,SAACC,GACV,EAAKC,SAAS,CACNH,MAAOE,EAAEE,OAAOC,S,EAGhCC,aAAc,SAACJ,GACPA,EAAEK,iBACF,EAAKC,MAAMC,MAAM,EAAKV,MAAMC,OAC5B,EAAKG,SAAS,CACVH,MAAO,M,4CAGf,WACI,OACI,uBAAMU,SAAUC,KAAKL,aAArB,UACI,uBAAOM,KAAK,OAAOC,SAAUF,KAAKV,aAAcI,MAAOM,KAAKZ,MAAMC,QAClE,wBAAQc,MAAO,CAAEC,gBAAiB,OAAlC,0B,GApBmBC,aC8CpBC,E,4MA7CblB,MAAQ,CACNC,MAAO,G,EAETkB,UAAY,WACV,EAAKf,SAAS,CAACH,MAAO,EAAKD,MAAMC,MAAM,K,EAEzCmB,UAAY,WACV,EAAKhB,SAAS,CAACH,MAAO,EAAKD,MAAMC,MAAM,K,EAEzCoB,MAAQ,WACN,EAAKjB,SAAS,CAACH,MAAM,K,EAEvBS,MAAQ,SAACY,GACP,IAAIhB,EAAQiB,SAASD,GACrB,EAAKlB,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQK,K,4CAI9B,WACE,OACE,qBAAKkB,UAAU,WAAf,SACA,sBAAKA,UAAU,aAAf,UACA,4BAAIZ,KAAKZ,MAAMC,QAKb,cAAC,EAAD,CAAOS,MAAOE,KAAKF,QAGlB,sBAAKc,UAAU,aAAf,UAGD,wBAAQC,QAASb,KAAKO,UAAWJ,MAAO,CAACW,SAAU,IAAnD,uBACA,wBAAQD,QAASb,KAAKQ,UAAWL,MAAO,CAACW,SAAU,IAAnD,uBACA,wBAAQD,QAASb,KAAKS,MAAON,MAAO,CAACW,SAAU,IAA/C,+B,GArCUT,aCUHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1cdb60f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    state={\r\n        count: ''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n                count: e.target.value\r\n        })\r\n    }\r\nhandleSubmit= (e) =>{\r\n        e.preventDefault();\r\n        this.props.input(this.state.count);\r\n        this.setState({\r\n            count: ''\r\n        })\r\n}\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" onChange={this.handleChange} value={this.state.count} />\r\n                <button style={{ backgroundColor: 'red' }}>Input</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Input from './Input';\nclass App extends Component{\n  state = {\n    count: 0\n  }\n  increment = () =>{\n    this.setState({count: this.state.count+1})\n  }\n  decrement = () =>{\n    this.setState({count: this.state.count-1})\n  }\n  reset = () =>{\n    this.setState({count:0})\n  }\n  input = (number) =>{\n    let value = parseInt(number)\n    this.setState({\n      count: this.state.count + value\n    })\n  }\n\n  render(){\n    return(\n      <div className='main-div'>\n      <div className='center-div'>\n      <p>{this.state.count}</p>\n     \n      \n  \n      \n        <Input input={this.input}/>\n       \n     \n         <div className='button-div'>\n        \n        \n        <button onClick={this.increment} style={{fontSize: 30}}>Increment</button>\n        <button onClick={this.decrement} style={{fontSize: 30}}>Decrement</button>\n        <button onClick={this.reset} style={{fontSize: 30 }} >Reset</button></div>\n      </div>\n      </div>\n      \n       \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}